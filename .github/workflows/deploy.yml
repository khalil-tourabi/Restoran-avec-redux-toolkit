name: Production Deployment Workflow

on:
  push:
    branches:
      - main  # Adjust this to your main branch name

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14.x'  # Use your preferred Node.js version

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

  deploy:
    needs: test  # Wait for the 'test' job to complete successfully before deploying

    permissions:
      contents: write
      pages: write
      id-token: write

    environment:
      name: production
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'  # Ensure this matches the version used in 'test'

      - name: Configure GitHub Pages
        uses: actions/configure-pages@v3
        with:
          static_site_generator: next  # Specify your static site generator if different

      - name: Install dependencies
        run: npm install

      - name: Build static site
        run: npm run build

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: production-build
          path: ./out  # Adjust this path based on your build output directory

      - name: Deploy to production
        id: deployment
        uses: actions/deploy-pages@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: main  # Specify the branch to deploy
          folder: ./out  # Adjust if your build output is in a different directory

